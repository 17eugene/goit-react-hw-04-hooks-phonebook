{"version":3,"sources":["AddForm/AddForm.module.css","AddForm/AddForm.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js","ContactList/ContactList.module.css","Filter/Filter.module.css"],"names":["module","exports","AddForm","submitHandler","useState","name","setName","number","setNumber","inputChange","e","currentTarget","value","className","styles","form","onSubmit","preventDefault","label","input","type","onChange","pattern","title","required","add_btn","ContactList","contacts","onDeleteContact","contact_list","map","id","contact","delete_btn","onClick","Filter","filter_wrapper","filter_label","filter_input","App","setContacts","filter","setFilter","useEffect","parsedData","JSON","parse","localStorage","getItem","setItem","stringify","filtredContacts","normalized","toLowerCase","includes","getFiltredContacts","data","newContact","shortid","generate","find","alert","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48a3b8d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddForm_form__2fBhI\",\"add_btn\":\"AddForm_add_btn__1c1TL\",\"label\":\"AddForm_label__2DcgQ\",\"input\":\"AddForm_input__3FZtR\"};","import React, { useState } from \"react\";\r\n\r\nimport styles from \"./AddForm.module.css\";\r\n\r\nfunction AddForm({ submitHandler }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const inputChange = (e) => {\r\n    switch (e.currentTarget.name) {\r\n      case \"name\":\r\n        setName(e.currentTarget.value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(e.currentTarget.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const formSubmit = (e) => {\r\n    e.preventDefault();\r\n    submitHandler({ name: name, number: number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={styles.form} onSubmit={formSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            onChange={inputChange}\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.form}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={inputChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.add_btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class AddForm extends React.Component {\r\n//   constructor() {\r\n//     super();\r\n\r\n//     this.state = {\r\n//       name: \"\",\r\n//       number: \"\",\r\n//     };\r\n//   }\r\n\r\n//   handleChange = (e) => {\r\n//     this.setState({\r\n//       [e.currentTarget.name]: e.currentTarget.value, //в значение артибута 'name' у инпута положиди знаение 'value'\r\n//     });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.submitHandler(this.state);\r\n//     this.setState({ name: \"\", number: \"\" });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <form className={styles.form} onSubmit={this.handleSubmit}>\r\n//           <label className={styles.label}>\r\n//             Name\r\n//             <input\r\n//               className={styles.input}\r\n//               type=\"text\"\r\n//               onChange={this.handleChange}\r\n//               name=\"name\"\r\n//               value={this.state.name}\r\n//               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//               title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//               required\r\n//             />\r\n//           </label>\r\n\r\n//           <label className={styles.form}>\r\n//             Number\r\n//             <input\r\n//               className={styles.input}\r\n//               type=\"tel\"\r\n//               name=\"number\"\r\n//               value={this.state.number}\r\n//               onChange={this.handleChange}\r\n//               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//               title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//               required\r\n//             />\r\n//           </label>\r\n\r\n//           <button type=\"submit\" className={styles.add_btn}>\r\n//             Add contact\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport { AddForm };\r\n","import styles from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={styles.contact_list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.contact}>\r\n          <p>\r\n            {name}: <span>{number}</span>\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.delete_btn}\r\n            onClick={() => {\r\n              onDeleteContact(id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport { ContactList };\r\n","import styles from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <div className={styles.filter_wrapper}>\r\n      <label className={styles.filter_label}>\r\n        Find contact by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          className={styles.filter_input}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Filter };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { AddForm } from \"./AddForm/AddForm\";\r\nimport { ContactList } from \"./ContactList/ContactList\";\r\nimport { Filter } from \"./Filter/Filter\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    const parsedData = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    if (parsedData) {\r\n      setContacts(parsedData);\r\n    } else {\r\n      return;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  });\r\n\r\n  const formSubmitHandler = (data) => {\r\n    //data - объект, состоящий из имени номера, которые прокинули из формы.\r\n    let newContact = {\r\n      id: shortid.generate(),\r\n      ...data,\r\n    };\r\n\r\n    if (\r\n      contacts.find(\r\n        (contact) =>\r\n          contact.number === data.number ||\r\n          contact.name.toLowerCase() === data.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(\"Contact already exist!\");\r\n      return;\r\n    }\r\n\r\n    setContacts([newContact, ...contacts]);\r\n  };\r\n\r\n  const deleteContact = (contactId) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\r\n  };\r\n\r\n  const filterChange = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getFiltredContacts = () => {\r\n    const normalized = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalized)\r\n    );\r\n  };\r\n\r\n  let filtredContacts = getFiltredContacts();\r\n  return (\r\n    <div>\r\n      <AddForm submitHandler={formSubmitHandler} />\r\n      <Filter value={filter} onChange={filterChange} />\r\n      <ContactList contacts={filtredContacts} onDeleteContact={deleteContact} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// class App extends React.Component {\r\n//   constructor() {\r\n//     super();\r\n\r\n//     this.state = {\r\n//       contacts: [\r\n//         { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//         { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//         { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//         { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n//       ],\r\n//       filter: \"\",\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     const parsedData = JSON.parse(localStorage.getItem(\"contacts\"));\r\n//     if (parsedData) {\r\n//       this.setState({ contacts: parsedData });\r\n//     }\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.state.contacts !== prevState.contacts) {\r\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n//     }\r\n//   }\r\n\r\n//   formSubmitHandler = (data) => {\r\n//     //data - объект, состоящий из имени номера, которые прокинули из формы.\r\n//     let newContact = {\r\n//       id: shortid.generate(),\r\n//       ...data,\r\n//     };\r\n\r\n//     if (\r\n//       this.state.contacts.find(\r\n//         (contact) =>\r\n//           contact.number === data.number ||\r\n//           contact.name.toLowerCase() === data.name.toLowerCase()\r\n//       )\r\n//     ) {\r\n//       alert(\"Contact already exist!\");\r\n//       return;\r\n//     }\r\n\r\n//     this.setState((prevState) => ({\r\n//       contacts: [newContact, ...prevState.contacts],\r\n//     }));\r\n//   };\r\n\r\n//   deleteContact = (contactId) => {\r\n//     this.setState((prevState) => ({\r\n//       contacts: prevState.contacts.filter(\r\n//         (contact) => contact.id !== contactId\r\n//       ),\r\n//     }));\r\n//   };\r\n\r\n//   filterChange = (e) => {\r\n//     this.setState({ filter: e.currentTarget.value });\r\n//   };\r\n\r\n//   getFiltredContacts = () => {\r\n//     const normalized = this.state.filter.toLowerCase();\r\n\r\n//     return this.state.contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(normalized)\r\n//     );\r\n//   };\r\n\r\n//   render() {\r\n//     let filtredContacts = this.getFiltredContacts();\r\n//     return (\r\n//       <div>\r\n//         <AddForm submitHandler={this.formSubmitHandler} />\r\n//         <Filter value={this.state.filter} onChange={this.filterChange} />\r\n//         <ContactList\r\n//           contacts={filtredContacts}\r\n//           onDeleteContact={this.deleteContact}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport { App };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__Ulhcf\",\"contact\":\"ContactList_contact__1w0Xt\",\"delete_btn\":\"ContactList_delete_btn__2fGIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__1rPKX\",\"filter_wrapper\":\"Filter_filter_wrapper__3n6MU\",\"filter_input\":\"Filter_filter_input__x2ohw\"};"],"sourceRoot":""}